version: '3.5'

services:
  shippinggo_cli_consignement:
    depends_on: 
      - "datastore"
      - "shippinggo_vesselms"
      - "shippinggo_consignementms"
    container_name: "shippinggo_cli_consignement"
    build: ./cliShippingGo
    environment: 
      MICRO_REGISTERY: "mdns"

  shippinggo_cli_user:
    build: ./userCli
    container_name: "shippinggo_cli_user"
    environment:
     MICRO_REGISTRY: "mdns"
    depends_on: 
      - "shippinggo_userms"

  shippinggo_userms:
    restart: always
    build: ./userService
    ports:
      - 50053:50051
    depends_on: 
      - "database"
    environment: 
      MICRO_SERVER_ADDRESS: ":50051"
      DB_HOST: "database:5432"
      DB_USER: "postgres"
      DB_PASSWORD: "postgres"
      DB_NAME: "postgres"

  shippinggo_consignementms:
    depends_on: 
      - "datastore"
      - "shippinggo_vesselms"
    restart: always
    container_name: "shippinggo_consignementms"
    build: ./consignementService
    ports:
      - 50051:50051 #exposing this port on the docker network only not host
    environment: 
      DB_HOST: "mongodb://datastore:27017"
      MICRO_SERVER_ADDRESS: ":50051"
      MICRO_REGISTERY: "mdns"

  shippinggo_vesselms:
    depends_on: 
      - "datastore"
    restart: always
    container_name: "shippinggo_vesselms"
    build: ./vesselService
    ports:
      - 50052:50051 #exposing this port on the docker network only not host
    environment: 
      DB_HOST: "mongodb://datastore:27017"
      MICRO_SERVER_ADDRESS: ":50051"
      MICRO_REGISTERY: "mdns"
      
  datastore:
    image: mongo:latest
    ports:
      - 27017:27017
  database:
    image: postgres
    ports:
      - 5432:5432
    environment: 
      POSTGRES_PASSWORD: "postgres"
